// ==|== foundation: animation =================================================
// =============================================================================

// Default maps
// -----------------------------------------------------------------------------
$default-duration-data: (
  fastest: 30ms,
  faster: 60ms,
  fast: 120ms,
  base: 240ms,
  slow: 480ms,
  slower: 960ms,
  slowest: 1920ms,
);

$default-easing-data: (
  base: ease-in-out,
  in: cubic-bezier(0.36, 0, 1, 1),
  out: cubic-bezier(0, 0, 0.42, 1),
  in-out: cubic-bezier(0.64, 0, 0.35, 1),
);

$custom-duration-data: () !default;
$custom-easing-data: () !default;

// Functions
// -----------------------------------------------------------------------------
// Returns the animation duration for the given variant.
// @param {String} $variant (optional) - The duration you want used.
// @return {Number} The animation duration value.
@function duration($variant: base) {
  $duration-data: map-merge($default-duration-data, $custom-duration-data);
  $fetched-duration: map-get($duration-data, $variant);

  @if type-of($fetched-duration) == number {
    @return $fetched-duration;
  } @else {
    @error 'Animation duration `#{$variant}` not found. Available durations: #{available-names($duration-data)}';
  }
}

// Returns the animation timing for the given variant.
// @param {String} $variant (optional) - The timing-function you want used.
// @return {Timing} The animation timing value.
@function easing($variant: base) {
  $easing-data: map-merge($default-easing-data, $custom-easing-data);
  $fetched-timing: map-get($easing-data, $variant);

  @if $fetched-timing {
    @return $fetched-timing;
  } @else {
    @error 'Animation timing `#{$variant}` not found. Available timings: #{available-names($easing-data)}';
  }
}

// Common keyframe animations
// -----------------------------------------------------------------------------
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes fade {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes hide {
  0% {
    left: 0;
    opacity: 1;
  }

  99% {
    left: 0;
    opacity: 0;
  }

  100% {
    left: -200%;
    opacity: 0;
  }
}

@keyframes svg-trace-stroke {
  to {
    stroke-dashoffset: 0;
  }
}
