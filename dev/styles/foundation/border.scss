// ==|== foundation: border ====================================================
// =============================================================================

// Default maps
// -----------------------------------------------------------------------------
$default-border-data: (
  base: 0.1rem solid color(black),
  thick: 0.2rem solid color(black),
);

$default-radius-data: (
  tight: 0.1rem,
  base: 0.3rem,
  loose: 0.6rem,
);

$custom-border-data: () !default;
$custom-radius-data: () !default;

// Functions
// -----------------------------------------------------------------------------
// Returns the shorthand border value for the given variant.
// @param {String} $variant (optional) - The key for the border variant
// @return {List} The shorthand border value with width, style, and color.
@function border($variant: base) {
  $border-data: map-merge($default-border-data, $custom-border-data);
  $fetched-border: map-get($border-data, $variant);

  @if type-of($fetched-border) == list {
    @return $fetched-border;
  } @else {
    @error 'Border variant `#{$variant}` not found. Available variants: #{available-names($border-data)}';
  }
}

// Returns the radius value for the given variant.
// @param {String} $variant (optional) - The key for the radius variant
// @return {Number} The border radius value in REMs.
@function radius($variant: base) {
  $radius-data: map-merge($default-border-data, $custom-border-data);
  $fetched-radius: map-get($borders-radius-data, $variant);

  @if type-of($fetched-radius) == number {
    @return $fetched-radius;
  } @else {
    @error 'Border variant `#{$variant}` not found. Available variants: #{available-names($border-data)}';
  }
}
