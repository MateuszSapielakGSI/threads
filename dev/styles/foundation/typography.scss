// ==|== foundation: typography ================================================
// =============================================================================

// Default maps
// -----------------------------------------------------------------------------
$default-font-family-data: (
  base: #{
    -apple-system,
    'BlinkMacSystemFont',
    'San Francisco',
    'Roboto',
    'Segoe UI',
    'Helvetica Neue',
    sans-serif
  },
  monospace: #{
    Monaco,
    Consolas,
    'Lucida Console',
    monospace
  },
);

$custom-font-family-data: () !default;

// Functions
// -----------------------------------------------------------------------------
// Returns the font stack for a given family.
// @param {String} $family (optional) - The key for the given family.
// @return {List} The font stack for the requested family.
@function font-family($family: base) {
  $font-family-data: map-merge($default-font-family-data, $custom-font-family-data);
  $fetched-font-family: map-get($font-family-data, $family);

  @if $fetched-font-family != null {
    @return $fetched-font-family;
  } @else {
    @error 'Font family `#{$family}` not found. Available font families: #{available-names($font-family-data)}';
  }
}

// Mixins
// -----------------------------------------------------------------------------
// For truncating single line text.
// @param {String} $display (optional) - The value to be used for `display`.
// @param {Boolean} $descender-fix (optional) - Sometimes descenders are cutoff by overflow.
@mixin truncate($display: block, $descender-fix: false) {
  $padding-bottom: if($descender-fix, 0.25em, null);

  display: $display;
  max-width: 100%;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  padding-bottom: $padding-bottom;
}

// A better way to achieve `text-decoration: underline;` - allows for transitions!
// @param {Number} $bottom (optional) - Allows for increasing / decreasing vertical positioning.
// @param {Number} $weight (optional) - Weight of the underline (value to be used for `height`).
@mixin link-underline($bottom: 0, $weight: 0.1rem) {
  @if type-of($bottom) != number {
    @error '#{$bottom} is not a number.';
  }

  @if type-of($weight) != number {
    @error '#{$weight} is not a number.';
  }

  // perhaps there should be a param to prevent overriding `position`?
  position: relative;

  &::before {
    content: '';
    display: block;
    position: absolute;
    bottom: $bottom;
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    height: $weight;
    background-color: currentColor;
    opacity: 0;
    transition: opacity duration() easing();
  }

  &:hover {
    &::before {
      opacity: 1;
    }
  }
}

// Helper classes
// -----------------------------------------------------------------------------
.text-truncate {
  @include truncate;
}

.text-truncate--inline-block {
  @include truncate('inline-block');
}

.text-center {
  text-align: center;
}

.text-underline {
  text-decoration: underline
}

.text-nowrap {
  white-space: nowrap;
}

.text-wrap {
  white-space: normal;
  word-wrap: break-word;
  word-break: break-word;
}
