// ==|== foundation: spacing ===================================================
// =============================================================================

// Default maps
// -----------------------------------------------------------------------------
$spacing-base-unit: 0.4rem;

$default-spacing-data: (
  tightest: $spacing-base-unit * 2,
  tighter: $spacing-base-unit * 4,
  tight: $spacing-base-unit * 6,
  base:  $spacing-base-unit * 8,
  loose: $spacing-base-unit * 10,
  looser: $spacing-base-unit * 12,
  loosest: $spacing-base-unit * 14,
  fat: $spacing-base-unit * 16,
  fatter: $spacing-base-unit * 18,
  fattest: $spacing-base-unit * 20,
);

$custom-spacing-data: () !default;

// Functions
// -----------------------------------------------------------------------------
// Returns the spacing value for a given variant.
// @param {String} $variant (optional) - The key for the given variant.
// @return {Number} The spacing for the variant.
@function spacing($variant: base) {
  $spacing-data: map-merge($default-spacing-data, $custom-spacing-data);
  $fetched-spacing: map-get($spacing-data, $variant);

  @if type-of($fetched-spacing) == number {
    @return $fetched-spacing;
  } @else {
    @error 'Spacing variant `#{$variant}` not found. Available variants: #{available-names($spacing-data)}';
  }
}
